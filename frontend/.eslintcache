[{"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\index.js":"1","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\store.js":"2","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\App.js":"3","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\reportWebVitals.js":"4","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\reducers\\productReducers.js":"5","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\reducers\\userReducers.js":"6","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\reducers\\orderReducers.js":"7","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\reducers\\cartReducers.js":"8","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\components\\Footer.js":"9","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\LoginScreen.js":"10","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\components\\Header.js":"11","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\HomeScreen.js":"12","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\CartScreen.js":"13","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\ProductScreen.js":"14","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\ProfileScreen.js":"15","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\ShippingScreen.js":"16","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\PaymentScreen.js":"17","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\RegisterScreen.js":"18","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\UserEditScreen.js":"19","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\OrderListScreen.js":"20","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\SurveyScreen.js":"21","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\OrderScreen.js":"22","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\UserListScreen.js":"23","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\PlaceOrderScreen.js":"24","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\SearchScreen.js":"25","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\ProductListScreen.js":"26","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\UniqueScreen.js":"27","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\ProductEditScreen.js":"28","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\components\\Message.js":"29","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\components\\Product.js":"30","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\components\\Loader.js":"31","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\components\\FormContainer.js":"32","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\components\\Paginate.js":"33","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\components\\ProductCarousel.js":"34","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\components\\Rating.js":"35","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\components\\Banner.js":"36","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\components\\SearchBox.js":"37","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\components\\CheckoutSteps.js":"38","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\constants\\cartConstants.js":"39","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\components\\SurveyCreatorWidget.js":"40","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\actions\\cartActions.js":"41","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\constants\\userConstants.js":"42","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\constants\\productConstants.js":"43","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\constants\\orderConstants.js":"44","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\actions\\userActions.js":"45","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\actions\\productActions.js":"46","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\actions\\orderActions.js":"47","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\components\\SurveyJson.js":"48","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\components\\SurveyTheme.js":"49"},{"size":689,"mtime":1726728465890,"results":"50","hashOfConfig":"51"},{"size":2417,"mtime":1726469480572,"results":"52","hashOfConfig":"51"},{"size":2520,"mtime":1726545069964,"results":"53","hashOfConfig":"51"},{"size":362,"mtime":1726469480387,"results":"54","hashOfConfig":"51"},{"size":4128,"mtime":1726680119706,"results":"55","hashOfConfig":"51"},{"size":3926,"mtime":1726469485020,"results":"56","hashOfConfig":"51"},{"size":4079,"mtime":1726469484689,"results":"57","hashOfConfig":"51"},{"size":1486,"mtime":1726469484497,"results":"58","hashOfConfig":"51"},{"size":363,"mtime":1726472016715,"results":"59","hashOfConfig":"51"},{"size":2549,"mtime":1726469485591,"results":"60","hashOfConfig":"51"},{"size":3547,"mtime":1726549353483,"results":"61","hashOfConfig":"51"},{"size":1979,"mtime":1727772586582,"results":"62","hashOfConfig":"51"},{"size":4721,"mtime":1726469485221,"results":"63","hashOfConfig":"51"},{"size":14044,"mtime":1727771965990,"results":"64","hashOfConfig":"51"},{"size":6872,"mtime":1727773049922,"results":"65","hashOfConfig":"51"},{"size":3176,"mtime":1726469487158,"results":"66","hashOfConfig":"51"},{"size":1705,"mtime":1726469486138,"results":"67","hashOfConfig":"51"},{"size":3922,"mtime":1726469486985,"results":"68","hashOfConfig":"51"},{"size":3912,"mtime":1726469487309,"results":"69","hashOfConfig":"51"},{"size":3541,"mtime":1727772985779,"results":"70","hashOfConfig":"51"},{"size":261,"mtime":1726504190346,"results":"71","hashOfConfig":"51"},{"size":10458,"mtime":1726498049247,"results":"72","hashOfConfig":"51"},{"size":3511,"mtime":1726469487492,"results":"73","hashOfConfig":"51"},{"size":6564,"mtime":1726469486268,"results":"74","hashOfConfig":"51"},{"size":200,"mtime":1726549405714,"results":"75","hashOfConfig":"51"},{"size":5007,"mtime":1726469486570,"results":"76","hashOfConfig":"51"},{"size":1655,"mtime":1727768167613,"results":"77","hashOfConfig":"51"},{"size":7916,"mtime":1726469486422,"results":"78","hashOfConfig":"51"},{"size":228,"mtime":1726469482438,"results":"79","hashOfConfig":"51"},{"size":1339,"mtime":1726894579571,"results":"80","hashOfConfig":"51"},{"size":458,"mtime":1726469482300,"results":"81","hashOfConfig":"51"},{"size":378,"mtime":1726469482007,"results":"82","hashOfConfig":"51"},{"size":3803,"mtime":1727772615508,"results":"83","hashOfConfig":"51"},{"size":1419,"mtime":1726469483000,"results":"84","hashOfConfig":"51"},{"size":1886,"mtime":1726469483166,"results":"85","hashOfConfig":"51"},{"size":1906,"mtime":1726550142508,"results":"86","hashOfConfig":"51"},{"size":984,"mtime":1726488485340,"results":"87","hashOfConfig":"51"},{"size":1593,"mtime":1726469481725,"results":"88","hashOfConfig":"51"},{"size":287,"mtime":1726469483705,"results":"89","hashOfConfig":"51"},{"size":1188,"mtime":1727347747088,"results":"90","hashOfConfig":"51"},{"size":1310,"mtime":1726469480790,"results":"91","hashOfConfig":"51"},{"size":1479,"mtime":1726469484286,"results":"92","hashOfConfig":"51"},{"size":1502,"mtime":1726469484092,"results":"93","hashOfConfig":"51"},{"size":1240,"mtime":1726469483922,"results":"94","hashOfConfig":"51"},{"size":7370,"mtime":1726469481479,"results":"95","hashOfConfig":"51"},{"size":5931,"mtime":1726678997735,"results":"96","hashOfConfig":"51"},{"size":6009,"mtime":1726469481001,"results":"97","hashOfConfig":"51"},{"size":5436,"mtime":1726551649737,"results":"98","hashOfConfig":"51"},{"size":747675,"mtime":1726543265654,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"19f67la",{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"102"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"102"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"102"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"102"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"102"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"102"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"102"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"102"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"102"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"102"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"102"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"102"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"102"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\index.js",[],["212","213"],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\store.js",[],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\App.js",[],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\components\\Header.js",["214"],"import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { logout } from '../actions/userActions'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMagnifyingGlass, faSprayCanSparkles, faUser } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction Header() {\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const dispatch = useDispatch()\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n    return (\n        <header>\n            <Navbar bg=\"white\" variant=\"light\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/'>\n                        <Navbar.Brand>Your Perfume</Navbar.Brand>\n                    </LinkContainer>\n\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        \n                        <Nav className=\"ml-auto\">\n\n                            <LinkContainer to='/search'>\n                                <Nav.Link ><FontAwesomeIcon icon={faMagnifyingGlass} />Search</Nav.Link>\n                            </LinkContainer>\n\n                            <LinkContainer to='/cart'>\n                                <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\n                            </LinkContainer>\n\n                            <LinkContainer to='/unique'>\n                                <Nav.Link ><FontAwesomeIcon icon={faSprayCanSparkles} />Unique</Nav.Link>\n                            </LinkContainer>\n\n                            {userInfo ? (\n                                <NavDropdown title={userInfo.name} id='username'>\n                                    <LinkContainer to='/profile'>\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n\n                                </NavDropdown>\n                            ) : (\n                                    <LinkContainer to='/login'>\n                                        <Nav.Link><FontAwesomeIcon icon={faUser} />Login</Nav.Link>\n                                    </LinkContainer>\n                                )}\n\n\n                            {userInfo && userInfo.isAdmin && (\n                                <NavDropdown title='Admin' id='adminmenue'>\n                                    <LinkContainer to='/admin/userlist'>\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/admin/productlist'>\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/admin/orderlist'>\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                </NavDropdown>\n                            )}\n\n\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\HomeScreen.js",["215","216","217","218"],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\ProductScreen.js",["219","220","221","222","223"],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\ProfileScreen.js",["224","225"],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\ShippingScreen.js",["226"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nfunction ShippingScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        history.push('/payment')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter address'\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter city'\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter postal code'\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter country'\n                        value={country ? country : ''}\n                        onChange={(e) => setCountry(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\PaymentScreen.js",["227"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nfunction PaymentScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    if (!shippingAddress.address) {\n        history.push('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='PayPal or Credit Card'\n                            id='paypal'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        >\n\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\RegisterScreen.js",["228"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nfunction RegisterScreen({ location, history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(name, email, password))\n        }\n\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Enter name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Confirm Password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an Account? <Link\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                        Sign In\n                        </Link>\n                </Col>\n            </Row>\n        </FormContainer >\n    )\n}\n\nexport default RegisterScreen\n","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\UserEditScreen.js",["229"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n\n            if (!user.name || user._id !== Number(userId)) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter Email'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is Admin'\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default UserEditScreen","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\OrderListScreen.js",["230"],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\SurveyScreen.js",["231","232"],"import React, { useState, useEffect } from 'react'\nimport SurveyCreatorWidget from '../components/SurveyCreatorWidget'\n\n\nfunction SurveyScreen() {\n    return (\n        <div>\n            <SurveyCreatorWidget/>\n        </div>\n    )\n}\n\nexport default SurveyScreen\n","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\OrderScreen.js",[],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\UserListScreen.js",["233"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <h1>Users</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default UserListScreen\n","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\PlaceOrderScreen.js",["234","235"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nfunction PlaceOrderScreen({ history }) {\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, error, success } = orderCreate\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\n\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n\n    if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n    }, [success, history])\n\n    const placeOrder = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }))\n    }\n\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n\n                            <p>\n                                <strong>Shipping: </strong>\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\n                                {'  '}\n                                {cart.shippingAddress.postalCode},\n                                {'  '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\n                                Your cart is empty\n                            </Message> : (\n                                    <ListGroup variant='flush'>\n                                        {cart.cartItems.map((item, index) => (\n                                            <ListGroup.Item key={index}>\n                                                <Row>\n                                                    <Col md={1}>\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                                    </Col>\n\n                                                    <Col>\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                    </Col>\n\n                                                    <Col md={4}>\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        ))}\n                                    </ListGroup>\n                                )}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping:</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn-block'\n                                    disabled={cart.cartItems === 0}\n                                    onClick={placeOrder}\n                                >\n                                    Place Order\n                                </Button>\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default PlaceOrderScreen\n","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\SearchScreen.js",[],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\ProductListScreen.js",["236"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nfunction ProductListScreen({ history, match }) {\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, pages, page } = productList\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    let keyword = history.location.search\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET })\n\n        if (!userInfo.isAdmin) {\n            history.push('/login')\n        }\n\n        if (successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts(keyword))\n        }\n\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this product?')) {\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n\n    return (\n        <div>\n            <Row className='align-items-center'>\n                <Col>\n                    <h1>Products</h1>\n                </Col>\n\n                <Col className='text-right'>\n                    <Button className='my-3' onClick={createProductHandler}>\n                        <i className='fas fa-plus'></i> Create Product\n                    </Button>\n                </Col>\n            </Row>\n\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <div>\n                            <Table striped bordered hover responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>NAME</th>\n                                        <th>PRICE</th>\n                                        <th>CATEGORY</th>\n                                        <th>BRAND</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {products.map(product => (\n                                        <tr key={product._id}>\n                                            <td>{product._id}</td>\n                                            <td>{product.name}</td>\n                                            <td>${product.price}</td>\n                                            <td>{product.category}</td>\n                                            <td>{product.brand}</td>\n\n                                            <td>\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                                    <Button variant='light' className='btn-sm'>\n                                                        <i className='fas fa-edit'></i>\n                                                    </Button>\n                                                </LinkContainer>\n\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\n                                                    <i className='fas fa-trash'></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                            <Paginate pages={pages} page={page} isAdmin={true} />\n                        </div>\n                    )}\n        </div>\n    )\n}\n\nexport default ProductListScreen","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\UniqueScreen.js",["237"],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\screens\\ProductEditScreen.js",[],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\components\\Message.js",[],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\components\\Product.js",[],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\components\\Paginate.js",[],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\components\\ProductCarousel.js",[],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\components\\Banner.js",[],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\components\\SearchBox.js",[],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\components\\SurveyCreatorWidget.js",["238"],"import { useCallback } from 'react';\r\n\r\nimport 'survey-core/defaultV2.min.css';\r\nimport { Model } from 'survey-core';\r\nimport { Survey } from 'survey-react-ui';\r\nimport { surveyThemeJson } from \"./SurveyTheme\";\r\nimport { surveyJson } from \"./SurveyJson\";\r\n\r\n\r\n// const SURVEY_ID = 1;\r\n\r\n\r\nfunction SurveyCreatorWidget() {\r\n  const survey = new Model(surveyJson);\r\n  survey.applyTheme(surveyThemeJson);\r\n  const alertResults = useCallback((sender) => {\r\n    const results = JSON.stringify(sender.data);\r\n    alert(results);\r\n    //alert(\"완료되었습니다.\");\r\n    \r\n    // saveSurveyResults(\r\n    //   \"https://your-web-service.com/\" + SURVEY_ID,\r\n    //   sender.data\r\n    // )\r\n  }, []);\r\n\r\n  survey.onComplete.add(alertResults);\r\n\r\n  return <Survey model={survey} />;\r\n}\r\n\r\nfunction saveSurveyResults(url, json) {\r\n  fetch(url, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=UTF-8'\r\n    },\r\n    body: JSON.stringify(json)\r\n  })\r\n  .then(response => {\r\n    if (response.ok) {\r\n      // Handle success\r\n    } else {\r\n      // Handle error\r\n    }\r\n  })\r\n  .catch(error => {\r\n    // Handle error\r\n  });\r\n}\r\n\r\nexport default SurveyCreatorWidget;","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\actions\\userActions.js",["239"],"import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n\n} from '../constants/userConstants'\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}\n\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'name': name, 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/profile/update/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/users/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/update/${user._id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\actions\\productActions.js",["240"],"import axios from 'axios'\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n\n} from '../constants/productConstants'\n\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`/api/products${keyword}`)\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`/api/products/top/`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/products/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/products/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/create/`,\n            {},\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/products/update/${product._id}/`,\n            product,\n            config\n        )\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        })\n\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/${productId}/reviews/`,\n            review,\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data,\n        })\n\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\actions\\orderActions.js",["241","242","243"],"import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/orders/add/`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/myorders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\components\\SurveyJson.js",[],"C:\\Users\\ykkim\\Downloads\\proshop_django-master\\project\\frontend\\src\\components\\SurveyTheme.js",[],{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","severity":1,"message":"249","line":3,"column":34,"nodeType":"250","messageId":"251","endLine":3,"endColumn":37},{"ruleId":"248","severity":1,"message":"252","line":1,"column":17,"nodeType":"250","messageId":"251","endLine":1,"endColumn":25},{"ruleId":"248","severity":1,"message":"253","line":2,"column":8,"nodeType":"250","messageId":"251","endLine":2,"endColumn":13},{"ruleId":"248","severity":1,"message":"254","line":9,"column":8,"nodeType":"250","messageId":"251","endLine":9,"endColumn":23},{"ruleId":"248","severity":1,"message":"255","line":11,"column":8,"nodeType":"250","messageId":"251","endLine":11,"endColumn":14},{"ruleId":"248","severity":1,"message":"256","line":4,"column":46,"nodeType":"250","messageId":"251","endLine":4,"endColumn":50},{"ruleId":"248","severity":1,"message":"253","line":10,"column":8,"nodeType":"250","messageId":"251","endLine":10,"endColumn":13},{"ruleId":"248","severity":1,"message":"257","line":27,"column":17,"nodeType":"250","messageId":"251","endLine":27,"endColumn":23},{"ruleId":"248","severity":1,"message":"258","line":57,"column":11,"nodeType":"250","messageId":"251","endLine":57,"endColumn":27},{"ruleId":"248","severity":1,"message":"259","line":61,"column":11,"nodeType":"250","messageId":"251","endLine":61,"endColumn":25},{"ruleId":"248","severity":1,"message":"260","line":2,"column":10,"nodeType":"250","messageId":"251","endLine":2,"endColumn":14},{"ruleId":"261","severity":1,"message":"262","line":53,"column":22,"nodeType":"263","messageId":"264","endLine":53,"endColumn":24},{"ruleId":"248","severity":1,"message":"265","line":1,"column":27,"nodeType":"250","messageId":"251","endLine":1,"endColumn":36},{"ruleId":"248","severity":1,"message":"265","line":1,"column":27,"nodeType":"250","messageId":"251","endLine":1,"endColumn":36},{"ruleId":"261","severity":1,"message":"262","line":34,"column":22,"nodeType":"263","messageId":"264","endLine":34,"endColumn":24},{"ruleId":"266","severity":1,"message":"267","line":43,"column":8,"nodeType":"268","endLine":43,"endColumn":46,"suggestions":"269"},{"ruleId":"248","severity":1,"message":"252","line":1,"column":17,"nodeType":"250","messageId":"251","endLine":1,"endColumn":25},{"ruleId":"248","severity":1,"message":"252","line":1,"column":17,"nodeType":"250","messageId":"251","endLine":1,"endColumn":25},{"ruleId":"248","severity":1,"message":"265","line":1,"column":27,"nodeType":"250","messageId":"251","endLine":1,"endColumn":36},{"ruleId":"248","severity":1,"message":"252","line":1,"column":17,"nodeType":"250","messageId":"251","endLine":1,"endColumn":25},{"ruleId":"248","severity":1,"message":"252","line":1,"column":17,"nodeType":"250","messageId":"251","endLine":1,"endColumn":25},{"ruleId":"266","severity":1,"message":"270","line":35,"column":8,"nodeType":"268","endLine":35,"endColumn":26,"suggestions":"271"},{"ruleId":"248","severity":1,"message":"252","line":1,"column":17,"nodeType":"250","messageId":"251","endLine":1,"endColumn":25},{"ruleId":"248","severity":1,"message":"252","line":1,"column":17,"nodeType":"250","messageId":"251","endLine":1,"endColumn":25},{"ruleId":"248","severity":1,"message":"272","line":32,"column":10,"nodeType":"250","messageId":"251","endLine":32,"endColumn":27},{"ruleId":"248","severity":1,"message":"273","line":21,"column":5,"nodeType":"250","messageId":"251","endLine":21,"endColumn":30},{"ruleId":"248","severity":1,"message":"274","line":117,"column":17,"nodeType":"250","messageId":"251","endLine":117,"endColumn":21},{"ruleId":"248","severity":1,"message":"275","line":14,"column":5,"nodeType":"250","messageId":"251","endLine":14,"endColumn":20},{"ruleId":"248","severity":1,"message":"276","line":19,"column":5,"nodeType":"250","messageId":"251","endLine":19,"endColumn":24},{"ruleId":"248","severity":1,"message":"277","line":28,"column":5,"nodeType":"250","messageId":"251","endLine":28,"endColumn":24},"no-native-reassign",["278"],"no-negated-in-lhs",["279"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'axios' is defined but never used.","'ProductCarousel' is defined but never used.","'Banner' is defined but never used.","'Card' is defined but never used.","'setQty' is assigned a value but never used.","'addToCartHandler' is assigned a value but never used.","'addToFavorites' is assigned a value but never used.","'Link' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["280"],"React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.",["281"],"'saveSurveyResults' is defined but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'data' is assigned a value but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},"Update the dependencies array to be: [user, userId, successUpdate, history, dispatch]",{"range":"286","text":"287"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"288","text":"289"},[1432,1470],"[user, userId, successUpdate, history, dispatch]",[1268,1286],"[success, history, order._id, dispatch]"]