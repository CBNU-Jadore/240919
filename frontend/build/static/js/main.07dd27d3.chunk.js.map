{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Banner.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","components/SurveyJson.js","components/SurveyCreatorWidget.js","screens/SurveyScreen.js","components/SearchBox.js","screens/SearchScreen.js","screens/UniqueScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","reducer","combineReducers","productList","state","arguments","length","undefined","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","async","dispatch","getState","config","headers","Authorization","token","data","axios","get","response","detail","message","Header","useSelector","useDispatch","_jsx","children","Navbar","bg","variant","expand","collapseOnSelect","_jsxs","Container","LinkContainer","to","Brand","Toggle","Collapse","Nav","className","Link","FontAwesomeIcon","icon","faMagnifyingGlass","faSprayCanSparkles","NavDropdown","title","name","Item","onClick","logoutHandler","removeItem","faUser","isAdmin","Footer","Row","Col","Rating","_ref","value","text","color","style","Product","Card","height","display","flexDirection","justifyContent","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","Loader","Spinner","animation","role","width","margin","Message","Alert","Paginate","keyword","split","Pagination","Array","keys","active","listProducts","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","price","Banner","position","textAlign","top","left","transform","fontSize","border","padding","borderRadius","HomeScreen","history","location","search","sm","md","lg","xl","ProductScreen","match","qty","setQty","useState","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","ListGroup","description","review","createdAt","substring","Form","onSubmit","e","createProductReview","productId","preventDefault","post","Group","controlId","Label","Control","onChange","target","row","Button","disabled","addToCart","countInStock","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","checkoutHandler","push","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","placeOrder","createOrder","UserListScreen","successDelete","deleteHandler","window","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","createProductHandler","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","updateProduct","File","custom","file","files","formData","FormData","append","OrderListScreen","isDelivered","deliveredAt","surveyJson","SurveyCreatorWidget","survey","Model","applyTheme","surveyThemeJson","alertResults","useCallback","sender","alert","onComplete","add","Survey","model","SurveyScreen","SearchBox","setKeyword","useHistory","pathname","inline","SearchScreen","UniqueScreen","App","Router","Route","path","component","exact","OrderScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.07dd27d3.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\n\n\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\n\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\n\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\n\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\n\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\n\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n    productListReducer,\n    productDetailsReducer,\n    productDeleteReducer,\n    productCreateReducer,\n    productUpdateReducer,\n    productReviewCreateReducer,\n    productTopRatedReducer,\n} from './reducers/productReducers'\n\nimport { cartReducer } from './reducers/cartReducers'\n\nimport {\n    userLoginReducer,\n    userRegisterReducer,\n    userDetailsReducer,\n    userUpdateProfileReducer,\n    userListReducer,\n    userDeleteReducer,\n    userUpdateReducer,\n} from './reducers/userReducers'\n\nimport {\n    orderCreateReducer,\n    orderDetailsReducer,\n    orderPayReducer,\n    orderListMyReducer,\n    orderListReducer,\n    orderDeliverReducer,\n} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    productDelete: productDeleteReducer,\n    productCreate: productCreateReducer,\n    productUpdate: productUpdateReducer,\n    productReviewCreate: productReviewCreateReducer,\n    productTopRated: productTopRatedReducer,\n\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    userUpdate: userUpdateReducer,\n\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderListMy: orderListMyReducer,\n    orderList: orderListReducer,\n    orderDeliver: orderDeliverReducer,\n})\n\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\n    JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\n    JSON.parse(localStorage.getItem('userInfo')) : null\n\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\n\nconst initialState = {\n    cart: {\n        cartItems: cartItemsFromStorage,\n        shippingAddress: shippingAddressFromStorage,\n    },\n    userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState,\n    composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store","import {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_CREATE_RESET,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_UPDATE_RESET,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_CREATE_REVIEW_RESET,\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\n\n\nexport const productListReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return { loading: true, products: [] }\n\n        case PRODUCT_LIST_SUCCESS:\n            return {\n                loading: false,\n                products: action.payload.products,\n                page: action.payload.page,\n                pages: action.payload.pages\n            }\n\n        case PRODUCT_LIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return { loading: true, ...state }\n\n        case PRODUCT_DETAILS_SUCCESS:\n            return { loading: false, product: action.payload }\n\n        case PRODUCT_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\nexport const productDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_DELETE_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_DELETE_SUCCESS:\n            return { loading: false, success: true }\n\n        case PRODUCT_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const productCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_CREATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n\n        case PRODUCT_CREATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_CREATE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case PRODUCT_UPDATE_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_UPDATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n\n        case PRODUCT_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_UPDATE_RESET:\n            return { product: {} }\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REVIEW_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\n            return { loading: false, success: true, }\n\n        case PRODUCT_CREATE_REVIEW_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_CREATE_REVIEW_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_TOP_REQUEST:\n            return { loading: true, products: [] }\n\n        case PRODUCT_TOP_SUCCESS:\n            return { loading: false, products: action.payload, }\n\n        case PRODUCT_TOP_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n","import {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n    CART_SAVE_SHIPPING_ADDRESS,\n\n    CART_SAVE_PAYMENT_METHOD,\n\n    CART_CLEAR_ITEMS,\n} from '../constants/cartConstants'\n\n\n\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload\n            const existItem = state.cartItems.find(x => x.product === item.product)\n\n            if (existItem) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map(x =>\n                        x.product === existItem.product ? item : x)\n                }\n\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, item]\n                }\n            }\n\n        case CART_REMOVE_ITEM:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\n            }\n\n        case CART_SAVE_SHIPPING_ADDRESS:\n            return {\n                ...state,\n                shippingAddress: action.payload\n            }\n\n        case CART_SAVE_PAYMENT_METHOD:\n            return {\n                ...state,\n                paymentMethod: action.payload\n            }\n\n        case CART_CLEAR_ITEMS:\n            return {\n                ...state,\n                cartItems: []\n            }\n\n        default:\n            return state\n    }\n}","import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_UPDATE_RESET,\n\n} from '../constants/userConstants'\n\n\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true }\n\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true }\n\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return { ...state, loading: true }\n\n        case USER_DETAILS_SUCCESS:\n            return { loading: false, user: action.payload }\n\n        case USER_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_DETAILS_RESET:\n            return { user: {} }\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_UPDATE_PROFILE_REQUEST:\n            return { loading: true }\n\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return { loading: false, success: true, userInfo: action.payload }\n\n        case USER_UPDATE_PROFILE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_UPDATE_PROFILE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const userListReducer = (state = { users: [] }, action) => {\n    switch (action.type) {\n        case USER_LIST_REQUEST:\n            return { loading: true }\n\n        case USER_LIST_SUCCESS:\n            return { loading: false, users: action.payload }\n\n        case USER_LIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LIST_RESET:\n            return { users: [] }\n\n        default:\n            return state\n    }\n}\n\n\nexport const userDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_DELETE_REQUEST:\n            return { loading: true }\n\n        case USER_DELETE_SUCCESS:\n            return { loading: false, success: true }\n\n        case USER_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_UPDATE_REQUEST:\n            return { loading: true }\n\n        case USER_UPDATE_SUCCESS:\n            return { loading: false, success: true }\n\n        case USER_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_UPDATE_RESET:\n            return { user: {} }\n\n        default:\n            return state\n    }\n}","import {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_CREATE_RESET,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\n\nexport const orderCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_CREATE_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_CREATE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                order: action.payload\n            }\n\n        case ORDER_CREATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_CREATE_RESET:\n            return {}\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\n    switch (action.type) {\n        case ORDER_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case ORDER_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n\n        case ORDER_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderPayReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_PAY_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_PAY_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n\n        case ORDER_PAY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_PAY_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderDeliverReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_DELIVER_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_DELIVER_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n\n        case ORDER_DELIVER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_DELIVER_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_MY_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_LIST_MY_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case ORDER_LIST_MY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_LIST_MY_RESET:\n            return {\n                orders: []\n            }\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_LIST_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case ORDER_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}","import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n\n} from '../constants/userConstants'\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}\n\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'name': name, 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/profile/update/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/users/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/update/${user._id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { logout } from '../actions/userActions'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMagnifyingGlass, faSprayCanSparkles, faUser } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction Header() {\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const dispatch = useDispatch()\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n    return (\n        <header>\n            <Navbar bg=\"white\" variant=\"light\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/'>\n                        <Navbar.Brand>Your Perfume</Navbar.Brand>\n                    </LinkContainer>\n\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        \n                        <Nav className=\"ml-auto\">\n\n                            <LinkContainer to='/search'>\n                                <Nav.Link ><FontAwesomeIcon icon={faMagnifyingGlass} />Search</Nav.Link>\n                            </LinkContainer>\n\n                            <LinkContainer to='/cart'>\n                                <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\n                            </LinkContainer>\n\n                            <LinkContainer to='/unique'>\n                                <Nav.Link ><FontAwesomeIcon icon={faSprayCanSparkles} />Unique</Nav.Link>\n                            </LinkContainer>\n\n                            {userInfo ? (\n                                <NavDropdown title={userInfo.name} id='username'>\n                                    <LinkContainer to='/profile'>\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n\n                                </NavDropdown>\n                            ) : (\n                                    <LinkContainer to='/login'>\n                                        <Nav.Link><FontAwesomeIcon icon={faUser} />Login</Nav.Link>\n                                    </LinkContainer>\n                                )}\n\n\n                            {userInfo && userInfo.isAdmin && (\n                                <NavDropdown title='Admin' id='adminmenue'>\n                                    <LinkContainer to='/admin/userlist'>\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/admin/productlist'>\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/admin/orderlist'>\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                </NavDropdown>\n                            )}\n\n\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction Footer() {\n    return (\n        <footer>\n            <Container>\n                <Row>\n                    <Col className=\"text-center py-3\">Copyright &copy; CBNU-Jadore</Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\n\nfunction Rating({ value, text, color }) {\n    return (\n        <div className=\"rating\">\n            <span>\n                <i style={{ color }} className={\n                    value >= 1\n                        ? 'fas fa-star'\n                        : value >= 0.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{ color }} className={\n                    value >= 2\n                        ? 'fas fa-star'\n                        : value >= 1.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{ color }} className={\n                    value >= 3\n                        ? 'fas fa-star'\n                        : value >= 2.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{ color }} className={\n                    value >= 4\n                        ? 'fas fa-star'\n                        : value >= 3.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{ color }} className={\n                    value >= 5\n                        ? 'fas fa-star'\n                        : value >= 4.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>{text && text}</span>\n        </div>\n    )\n}\n\nexport default Rating\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\nimport { Link } from 'react-router-dom'\n\nfunction Product({ product }) {\n    return (\n        // <Card className=\"my-3 p-3 rounded\">\n        <Card className=\"my-3 p-3 rounded\" style={{ height: '90%', display: 'flex', flexDirection: 'column', justifyContent: 'space-between' }}> \n            <Link to={`/product/${product._id}`}>\n                <Card.Img src={product.image} />\n            </Link>\n\n            <Card.Body>\n                <Link to={`/product/${product._id}`}>\n                    <Card.Title as=\"div\">\n                        <h4>{product.name}</h4>\n                    </Card.Title>\n                </Link>\n                \n                <Card.Text as=\"div\">\n                    <div className=\"my-3\">\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\n                    </div>\n                </Card.Text>\n\n                {/* <Card.Text as=\"h3\">\n                    ${product.price}\n                </Card.Text> */}\n\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default Product\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nfunction Loader() {\n    return (\n        <Spinner\n            animation='border'\n            role='status'\n            style={{\n                height: '100px',\n                width: '100px',\n                margin: 'auto',\n                display: 'block'\n            }}\n        >\n            <span className='sr-only'>Loading...</span>\n        </Spinner>\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nfunction Message({ variant, children }) {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\n    if (keyword) {\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\n    }\n\n    return (pages > 1 && (\n        <Pagination>\n            {[...Array(pages).keys()].map((x) => (\n                <LinkContainer\n                    key={x + 1}\n                    to={!isAdmin ?\n                        `/?keyword=${keyword}&page=${x + 1}`\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\n                    }\n                >\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n                </LinkContainer>\n            ))}\n        </Pagination>\n    )\n    )\n}\n\nexport default Paginate\n","import axios from 'axios'\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n\n} from '../constants/productConstants'\n\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`/api/products${keyword}`)\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`/api/products/top/`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/products/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/products/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/create/`,\n            {},\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/products/update/${product._id}/`,\n            product,\n            config\n        )\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        })\n\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/${productId}/reviews/`,\n            review,\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data,\n        })\n\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Carousel, Image } from 'react-bootstrap'\nimport Loader from './Loader'\nimport Message from './Message'\nimport { listTopProducts } from '../actions/productActions'\n\nfunction ProductCarousel() {\n    const dispatch = useDispatch()\n\n    const productTopRated = useSelector(state => state.productTopRated)\n    const { error, loading, products } = productTopRated\n\n    useEffect(() => {\n        dispatch(listTopProducts())\n    }, [dispatch])\n\n    return (loading ? <Loader />\n        : error\n            ? <Message variant='danger'>{error}</Message>\n            : (\n                <Carousel pause='hover' className='bg-dark'>\n                    {products.map(product => (\n                        <Carousel.Item key={product._id}>\n                            <Link to={`/product/${product._id}`}>\n                                <Image src={product.image} alt={product.name} fluid />\n                                <Carousel.Caption className='carousel.caption'>\n                                    <h4>{product.name} (${product.price})</h4>\n                                </Carousel.Caption>\n                            </Link>\n                        </Carousel.Item>\n                    ))}\n                </Carousel>\n            )\n\n    )\n}\n\nexport default ProductCarousel\n","import React from 'react'\nimport { Container } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nfunction Banner() {\n    return (\n        <Container className='pb-3' style={{ position: 'relative', textAlign: 'center' }}>\n            <Link to={`/survey`}>\n                <img src=\"/images/banner.jpg\" style={{ width: '100%' }} alt=\"Banner\"></img>\n\n                {/* \"당신의 향을 찾아드립니다\" 문구 */}\n                <h2 \n                    style={{ \n                        position: 'absolute', \n                        top: '40%',\n                        left: '50%', \n                        transform: 'translate(-50%, -50%)', \n                        color: '#474040', \n                        fontSize: '2.5rem', \n                        // textShadow: '2px 2px 4px rgba(0, 0, 0, 0.7)' \n                    }}\n                >\n                    당신의 향을 찾아드립니다.\n                </h2>\n\n                {/* \"설문조사 하러가기\" 문구 */}\n                <h1 \n                    style={{ \n                        position: 'absolute', \n                        top: '67%',\n                        left: '50%', \n                        transform: 'translate(-50%, -50%)', \n                        color: '#474040', \n                        fontSize: '2rem', \n                        // textShadow: '2px 2px 4px rgba(0, 0, 0, 0.7)',\n                        border: '2px solid #474040',  // 흰색 테두리\n                        padding: '10px 20px',       // 내부 여백\n                        borderRadius: '10px',        // 모서리 둥글게\n                        // backgroundColor: 'rgba(0, 0, 0, 0.5)'  // 약간의 배경색 추가 (반투명 검정)\n                    }}\n                >\n                    설문 시작하기\n                </h1>\n            </Link>\n        </Container>\n    )\n}\n\nexport default Banner\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\nimport { listProducts } from '../actions/productActions'\nimport Banner from '../components/Banner'\n\n\nfunction HomeScreen({ history }) {\n    // axios\n    // const [ products, setProducts] = useState([])\n    // useEffect(()=> {\n    //     async function fetchProducts() {\n    //         const {data} = await axios.get('/api/products/')\n    //         setProducts(data)\n    //     }\n    //     fetchProducts()\n    // }, [])\n\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state.productList)\n    const { error, loading, products, page, pages } = productList\n\n    let keyword = history.location.search\n\n    useEffect(() => {\n        dispatch(listProducts(keyword))\n\n    }, [dispatch, keyword])\n\n    return (\n        <div>\n            {!keyword && <Banner/>}\n\n            <h1>Latest Perfumes</h1>\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    :\n                    <div>\n                        <Row>\n                            {products.map(product => (\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                                    <Product product={product} />\n                                </Col>\n                            ))}\n                        </Row>\n                        <Paginate page={page} pages={pages} keyword={keyword} />\n                    </div>\n            }\n        </div>\n    )\n}\n\nexport default HomeScreen\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listProductDetails, createProductReview } from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\nimport axios from 'axios'\n\n\nfunction ProductScreen({ match, history }) {\n    // v1\n    // const product = products.find((p) => p._id == match.params.id)\n\n    // v2 - axios\n    // const [ product, setProduct] = useState([])\n    // useEffect(()=> {\n    //     async function fetchProduct() {\n    //         const {data} = await axios.get('/api/products/${match.params.id}')\n    //         setProduct(data)\n    //     }\n    //     fetchProduct()\n    // }, [])\n\n    const [qty, setQty] = useState(1)\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState('')\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { loading, error, product } = productDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\n    const {\n        loading: loadingProductReview,\n        error: errorProductReview,\n        success: successProductReview,\n    } = productReviewCreate\n\n    useEffect(() => {\n        if (successProductReview) {\n            setRating(0)\n            setComment('')\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n        }\n\n        dispatch(listProductDetails(match.params.id))\n\n    }, [dispatch, match, successProductReview])\n\n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createProductReview(\n            match.params.id, {\n            rating,\n            comment\n        }\n        ))\n    }\n\n    return (\n        <div>\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\n            {loading ?\n                <Loader />\n                : error\n                    ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <div>\n                            <Row>\n                                <Col md={8}>\n                                    <Image src={product.image} alt={product.name} fluid />\n                                </Col>\n\n\n                                <Col md={4}>\n                                    <ListGroup variant=\"flush\">\n                                        <ListGroup.Item>\n                                            <h3>{product.name}</h3>\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            Price: ${product.price}\n                                        </ListGroup.Item>   \n                                        {/* 노드, 계절?,  */}\n\n                                        <ListGroup.Item>\n                                            {product.description}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n\n\n                                {/* 수량 선택 <Col md={3}>\n                                    <Card>\n                                        <ListGroup variant='flush'>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Price:</Col>\n                                                    <Col>\n                                                        <strong>${product.price}</strong>\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Status:</Col>\n                                                    <Col>\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n\n                                            {product.countInStock > 0 && (\n                                                <ListGroup.Item>\n                                                    <Row>\n                                                        <Col>Qty</Col>\n                                                        <Col xs='auto' className='my-1'>\n                                                            <Form.Control\n                                                                as=\"select\"\n                                                                value={qty}\n                                                                onChange={(e) => setQty(e.target.value)}\n                                                            >\n                                                                {\n\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\n                                                                        <option key={x + 1} value={x + 1}>\n                                                                            {x + 1}\n                                                                        </option>\n                                                                    ))\n                                                                }\n\n                                                            </Form.Control>\n                                                        </Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                            )}\n\n\n                                            <ListGroup.Item>\n                                                <Button\n                                                    onClick={addToCartHandler}\n                                                    className='btn-block'\n                                                    disabled={product.countInStock == 0}\n                                                    type='button'>\n                                                    Add to Cart\n                                                </Button>\n                                            </ListGroup.Item>\n                                        </ListGroup>\n                                    </Card>\n                                </Col> */}\n                            </Row>\n\n                            <Row>\n                                <Col md={8}>\n                                    <h3>Reviews</h3>\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\n\n                                    <ListGroup variant='flush'>\n                                        {product.reviews.map((review) => (\n                                            <ListGroup.Item key={review._id}>\n                                                <strong>{review.name}</strong>\n                                                <Rating value={review.rating} color='#f8e825' />\n                                                <p>{review.createdAt.substring(0, 10)}</p>\n                                                <p>{review.comment}</p>\n                                            </ListGroup.Item>\n                                        ))}\n\n                                        <ListGroup.Item>\n                                            <h4>Write a review</h4>\n\n                                            {loadingProductReview && <Loader />}\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\n\n                                            {userInfo ? (\n                                                <Form onSubmit={submitHandler}>\n                                                    <Form.Group controlId='rating'>\n                                                        <Form.Label>Rating</Form.Label>\n                                                        <Form.Control\n                                                            as='select'\n                                                            value={rating}\n                                                            onChange={(e) => setRating(e.target.value)}\n                                                        >\n                                                            <option value=''>Select...</option>\n                                                            <option value='1'>1 - Poor</option>\n                                                            <option value='2'>2 - Fair</option>\n                                                            <option value='3'>3 - Good</option>\n                                                            <option value='4'>4 - Very Good</option>\n                                                            <option value='5'>5 - Excellent</option>\n                                                        </Form.Control>\n                                                    </Form.Group>\n\n                                                    <Form.Group controlId='comment'>\n                                                        <Form.Label>Review</Form.Label>\n                                                        <Form.Control\n                                                            as='textarea'\n                                                            row='5'\n                                                            value={comment}\n                                                            onChange={(e) => setComment(e.target.value)}\n                                                        ></Form.Control>\n                                                    </Form.Group>\n\n                                                    <Button\n                                                        disabled={loadingProductReview}\n                                                        type='submit'\n                                                        variant='primary'\n                                                    >\n                                                        Submit\n                                                    </Button>\n\n                                                </Form>\n                                            ) : (\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\n                                                )}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n                            </Row>\n                        </div>\n                    )\n\n            }\n\n\n        </div >\n    )\n}\n\nexport default ProductScreen\n","import axios from 'axios'\nimport {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n    CART_SAVE_SHIPPING_ADDRESS,\n\n    CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants'\n\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n            product: data._id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty\n        }\n    })\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\n\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: id,\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRESS,\n        payload: data,\n    })\n\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_PAYMENT_METHOD,\n        payload: data,\n    })\n\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\n}","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nfunction CartScreen({ match, location, history }) {\n    const productId = match.params.id\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    return (\n        <Row>\n            <Col md={8}>\n                <h1>Shopping Cart</h1>\n                {cartItems.length === 0 ? (\n                    <Message variant='info'>\n                        Your cart is empty <Link to='/'>Go Back</Link>\n                    </Message>\n                ) : (\n                        <ListGroup variant='flush'>\n                            {cartItems.map(item => (\n                                <ListGroup.Item key={item.product}>\n                                    <Row>\n                                        <Col md={2}>\n                                            <Image src={item.image} alt={item.name} fluid rounded />\n                                        </Col>\n                                        <Col md={3}>\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                        </Col>\n\n                                        <Col md={2}>\n                                            ${item.price}\n                                        </Col>\n\n                                        <Col md={3}>\n                                            <Form.Control\n                                                as=\"select\"\n                                                value={item.qty}\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\n                                            >\n                                                {\n\n                                                    [...Array(item.countInStock).keys()].map((x) => (\n                                                        <option key={x + 1} value={x + 1}>\n                                                            {x + 1}\n                                                        </option>\n                                                    ))\n                                                }\n\n                                            </Form.Control>\n                                        </Col>\n\n                                        <Col md={1}>\n                                            <Button\n                                                type='button'\n                                                variant='light'\n                                                onClick={() => removeFromCartHandler(item.product)}\n                                            >\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                            ))}\n                        </ListGroup>\n                    )}\n            </Col>\n\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\n                        </ListGroup.Item>\n                    </ListGroup>\n\n                    <ListGroup.Item>\n                        <Button\n                            type='button'\n                            className='btn-block'\n                            disabled={cartItems.length === 0}\n                            onClick={checkoutHandler}\n                        >\n                            Proceed To Checkout\n                        </Button>\n                    </ListGroup.Item>\n\n\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default CartScreen","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction FormContainer({ children }) {\n    return (\n        <Container>\n            <Row className=\"justify-content-md-center\">\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\nfunction LoginScreen({ location, history }) {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { error, loading, userInfo } = userLogin\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Sign In\n                </Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    New Customer? <Link\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n                        Register\n                        </Link>\n                </Col>\n            </Row>\n\n        </FormContainer>\n    )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nfunction RegisterScreen({ location, history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(name, email, password))\n        }\n\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Enter name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Confirm Password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an Account? <Link\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                        Sign In\n                        </Link>\n                </Col>\n            </Row>\n        </FormContainer >\n    )\n}\n\nexport default RegisterScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderActions'\n\nfunction ProfileScreen({ history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success || userInfo._id !== user._id) {\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password\n            }))\n            setMessage('')\n        }\n\n    }\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='Enter name'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            required\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Enter Password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='passwordConfirm'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Confirm Password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                </Button>\n\n                </Form>\n            </Col>\n\n            <Col md={9}>\n                <h2>My Orders</h2>\n                {loadingOrders ? (\n                    <Loader />\n                ) : errorOrders ? (\n                    <Message variant='danger'>{errorOrders}</Message>\n                ) : (\n                            <Table striped responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>Date</th>\n                                        <th>Total</th>\n                                        <th>Paid</th>\n                                        <th>Delivered</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {orders.map(order => (\n                                        <tr key={order._id}>\n                                            <td>{order._id}</td>\n                                            <td>{order.createdAt.substring(0, 10)}</td>\n                                            <td>${order.totalPrice}</td>\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                            )}</td>\n                                            <td>\n                                                <LinkContainer to={`/order/${order._id}`}>\n                                                    <Button className='btn-sm'>Details</Button>\n                                                </LinkContainer>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                        )}\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen","import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/orders/add/`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/myorders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\n\n    return (\n        <Nav className='justify-content-center mb-4'>\n            <Nav.Item>\n                {step1 ? (\n                    <LinkContainer to='/login'>\n                        <Nav.Link>Login</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                        <Nav.Link disabled>Login</Nav.Link>\n                    )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step2 ? (\n                    <LinkContainer to='/shipping'>\n                        <Nav.Link>Shipping</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                        <Nav.Link disabled>Shipping</Nav.Link>\n                    )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step3 ? (\n                    <LinkContainer to='/payment'>\n                        <Nav.Link>Payment</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                        <Nav.Link disabled>Payment</Nav.Link>\n                    )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step4 ? (\n                    <LinkContainer to='/placeorder'>\n                        <Nav.Link>Place Order</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                        <Nav.Link disabled>Place Order</Nav.Link>\n                    )}\n            </Nav.Item>\n        </Nav>\n    )\n}\n\nexport default CheckoutSteps\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nfunction ShippingScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        history.push('/payment')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter address'\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter city'\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter postal code'\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter country'\n                        value={country ? country : ''}\n                        onChange={(e) => setCountry(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nfunction PaymentScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    if (!shippingAddress.address) {\n        history.push('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='PayPal or Credit Card'\n                            id='paypal'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        >\n\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nfunction PlaceOrderScreen({ history }) {\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, error, success } = orderCreate\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\n\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n\n    if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n    }, [success, history])\n\n    const placeOrder = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }))\n    }\n\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n\n                            <p>\n                                <strong>Shipping: </strong>\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\n                                {'  '}\n                                {cart.shippingAddress.postalCode},\n                                {'  '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\n                                Your cart is empty\n                            </Message> : (\n                                    <ListGroup variant='flush'>\n                                        {cart.cartItems.map((item, index) => (\n                                            <ListGroup.Item key={index}>\n                                                <Row>\n                                                    <Col md={1}>\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                                    </Col>\n\n                                                    <Col>\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                    </Col>\n\n                                                    <Col md={4}>\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        ))}\n                                    </ListGroup>\n                                )}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping:</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn-block'\n                                    disabled={cart.cartItems === 0}\n                                    onClick={placeOrder}\n                                >\n                                    Place Order\n                                </Button>\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default PlaceOrderScreen\n","import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <h1>Users</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default UserListScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n\n            if (!user.name || user._id !== Number(userId)) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter Email'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is Admin'\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default UserEditScreen","import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nfunction ProductListScreen({ history, match }) {\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, pages, page } = productList\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    let keyword = history.location.search\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET })\n\n        if (!userInfo.isAdmin) {\n            history.push('/login')\n        }\n\n        if (successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts(keyword))\n        }\n\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this product?')) {\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n\n    return (\n        <div>\n            <Row className='align-items-center'>\n                <Col>\n                    <h1>Products</h1>\n                </Col>\n\n                <Col className='text-right'>\n                    <Button className='my-3' onClick={createProductHandler}>\n                        <i className='fas fa-plus'></i> Create Product\n                    </Button>\n                </Col>\n            </Row>\n\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <div>\n                            <Table striped bordered hover responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>NAME</th>\n                                        <th>PRICE</th>\n                                        <th>CATEGORY</th>\n                                        <th>BRAND</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {products.map(product => (\n                                        <tr key={product._id}>\n                                            <td>{product._id}</td>\n                                            <td>{product.name}</td>\n                                            <td>${product.price}</td>\n                                            <td>{product.category}</td>\n                                            <td>{product.brand}</td>\n\n                                            <td>\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                                    <Button variant='light' className='btn-sm'>\n                                                        <i className='fas fa-edit'></i>\n                                                    </Button>\n                                                </LinkContainer>\n\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\n                                                    <i className='fas fa-trash'></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                            <Paginate pages={pages} page={page} isAdmin={true} />\n                        </div>\n                    )}\n        </div>\n    )\n}\n\nexport default ProductListScreen","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\n\nfunction ProductEditScreen({ match, history }) {\n\n    const productId = match.params.id\n\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [image, setImage] = useState('')\n    const [brand, setBrand] = useState('')\n    const [category, setCategory] = useState('')\n    const [countInStock, setCountInStock] = useState(0)\n    const [description, setDescription] = useState('')\n    const [uploading, setUploading] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { error, loading, product } = productDetails\n\n    const productUpdate = useSelector(state => state.productUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\n\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: PRODUCT_UPDATE_RESET })\n            history.push('/admin/productlist')\n        } else {\n            if (!product.name || product._id !== Number(productId)) {\n                dispatch(listProductDetails(productId))\n            } else {\n                setName(product.name)\n                setPrice(product.price)\n                setImage(product.image)\n                setBrand(product.brand)\n                setCategory(product.category)\n                setCountInStock(product.countInStock)\n                setDescription(product.description)\n\n            }\n        }\n\n\n\n    }, [dispatch, product, productId, history, successUpdate])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateProduct({\n            _id: productId,\n            name,\n            price,\n            image,\n            brand,\n            category,\n            countInStock,\n            description\n        }))\n    }\n\n    const uploadFileHandler = async (e) => {\n        const file = e.target.files[0]\n        const formData = new FormData()\n\n        formData.append('image', file)\n        formData.append('product_id', productId)\n\n        setUploading(true)\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n\n            const { data } = await axios.post('/api/products/upload/', formData, config)\n\n\n            setImage(data)\n            setUploading(false)\n\n        } catch (error) {\n            setUploading(false)\n        }\n    }\n\n    return (\n        <div>\n            <Link to='/admin/productlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit Product</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='price'>\n                                <Form.Label>Price</Form.Label>\n                                <Form.Control\n\n                                    type='number'\n                                    placeholder='Enter price'\n                                    value={price}\n                                    onChange={(e) => setPrice(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n\n                            <Form.Group controlId='image'>\n                                <Form.Label>Image</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter image'\n                                    value={image}\n                                    onChange={(e) => setImage(e.target.value)}\n                                >\n                                </Form.Control>\n\n                                <Form.File\n                                    id='image-file'\n                                    label='Choose File'\n                                    custom\n                                    onChange={uploadFileHandler}\n                                >\n\n                                </Form.File>\n                                {uploading && <Loader />}\n\n                            </Form.Group>\n\n\n                            <Form.Group controlId='brand'>\n                                <Form.Label>Brand</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter brand'\n                                    value={brand}\n                                    onChange={(e) => setBrand(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='countinstock'>\n                                <Form.Label>Stock</Form.Label>\n                                <Form.Control\n\n                                    type='number'\n                                    placeholder='Enter stock'\n                                    value={countInStock}\n                                    onChange={(e) => setCountInStock(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='category'>\n                                <Form.Label>Category</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter category'\n                                    value={category}\n                                    onChange={(e) => setCategory(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='description'>\n                                <Form.Label>Description</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter description'\n                                    value={description}\n                                    onChange={(e) => setDescription(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default ProductEditScreen","import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listOrders } from '../actions/orderActions'\n\nfunction OrderListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const orderList = useSelector(state => state.orderList)\n    const { loading, error, orders } = orderList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listOrders())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, userInfo])\n\n\n    return (\n        <div>\n            <h1>Orders</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>USER</th>\n                                    <th>DATE</th>\n                                    <th>Total</th>\n                                    <th>PAID</th>\n                                    <th>DELIVERED</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {orders.map(order => (\n                                    <tr key={order._id}>\n                                        <td>{order._id}</td>\n                                        <td>{order.user && order.user.name}</td>\n                                        <td>{order.createdAt.substring(0, 10)}</td>\n                                        <td>${order.totalPrice}</td>\n\n                                        <td>{order.isPaid ? (\n                                            order.paidAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>{order.isDelivered ? (\n                                            order.deliveredAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>\n                                            <LinkContainer to={`/order/${order._id}`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    Details\n                                                </Button>\n                                            </LinkContainer>\n\n\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default OrderListScreen","export const surveyJson = {\r\n  \"locale\": \"ko\",\r\n  \"logoPosition\": \"right\",\r\n  \"completedHtml\": {\r\n    \"ko\": \"<h3>조사해 주셔서 감사합니다.</h3>\"\r\n  },\r\n  \"pagePrevText\": {\r\n    \"ko\": \"이전\"\r\n  },\r\n  \"pageNextText\": {\r\n    \"ko\": \"다음\"\r\n  },\r\n  \"completeText\": {\r\n    \"ko\": \"완료\"\r\n  },\r\n  \"pages\": [\r\n    {\r\n      \"name\": \"page1\",\r\n      \"elements\": [\r\n        {\r\n          \"type\": \"radiogroup\",\r\n          \"name\": \"question1\",\r\n          \"title\": \"연령대를 선택해주세요.\",\r\n          \"isRequired\": true,\r\n          \"choices\": [\r\n            {\r\n              \"value\": 1,\r\n              \"text\": \"10대 미만\"\r\n            },\r\n            {\r\n              \"value\": 2,\r\n              \"text\": \"10대\"\r\n            },\r\n            {\r\n              \"value\": 3,\r\n              \"text\": \"20대\"\r\n            },\r\n            {\r\n              \"value\": 4,\r\n              \"text\": \"30대\"\r\n            },\r\n            {\r\n              \"value\": 5,\r\n              \"text\": \"40대\"\r\n            },\r\n            {\r\n              \"value\": 6,\r\n              \"text\": \"50대\"\r\n            },\r\n            {\r\n              \"value\": 7,\r\n              \"text\": \"60대 이상\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          \"type\": \"radiogroup\",\r\n          \"name\": \"question2\",\r\n          \"title\": \"성별을 선택해주세요.\",\r\n          \"isRequired\": true,\r\n          \"choices\": [\r\n            {\r\n              \"value\": 1,\r\n              \"text\": \"남성\"\r\n            },\r\n            {\r\n              \"value\": 2,\r\n              \"text\": \"여성\"\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"name\": \"page2\",\r\n      \"elements\": [\r\n        {\r\n          \"type\": \"radiogroup\",\r\n          \"name\": \"question3\",\r\n          \"title\": \"좋아하는 계절을 선택해주세요.\",\r\n          \"isRequired\": true,\r\n          \"choices\": [\r\n            {\r\n              \"value\": 1,\r\n              \"text\": \"봄\"\r\n            },\r\n            {\r\n              \"value\": 2,\r\n              \"text\": \"여름\"\r\n            },\r\n            {\r\n              \"value\": 3,\r\n              \"text\": \"가을\"\r\n            },\r\n            {\r\n              \"value\": 4,\r\n              \"text\": \"겨울\"\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"name\": \"page4\",\r\n      \"elements\": [\r\n        {\r\n          \"type\": \"checkbox\",\r\n          \"name\": \"question4\",\r\n          \"title\": \"평소 선호하는 느낌을 선택해주세요. \",\r\n          \"isRequired\": true,\r\n          \"choices\": [\r\n            {\r\n              \"value\": 1,\r\n              \"text\": \"가벼움\"\r\n            },\r\n            {\r\n              \"value\": 2,\r\n              \"text\": \"상큼함\"\r\n            },\r\n            {\r\n              \"value\": 3,\r\n              \"text\": \"산뜻함\"\r\n            },\r\n            {\r\n              \"value\": 4,\r\n              \"text\": \"달콤함\"\r\n            },\r\n            {\r\n              \"value\": 5,\r\n              \"text\": \"청량함\"\r\n            },\r\n            {\r\n              \"value\": 6,\r\n              \"text\": \"강렬함\"\r\n            },\r\n            {\r\n              \"value\": 7,\r\n              \"text\": \"시원함\"\r\n            },\r\n            {\r\n              \"value\": 8,\r\n              \"text\": \"따뜻함\"\r\n            },\r\n            {\r\n              \"value\": 9,\r\n              \"text\": \"깨끗함\"\r\n            },\r\n            {\r\n              \"value\": 10,\r\n              \"text\": \"부드러움\"\r\n            },\r\n            {\r\n              \"value\": 11,\r\n              \"text\": \"여성적\"\r\n            },\r\n            {\r\n              \"value\": 12,\r\n              \"text\": \"남성적\"\r\n            },\r\n            {\r\n              \"value\": 13,\r\n              \"text\": \"중성적\"\r\n            }\r\n          ],\r\n          \"showNoneItem\": true,\r\n          \"noneText\": \"모름\",\r\n          \"showSelectAllItem\": true,\r\n          \"selectAllText\": \"모두 선택\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"name\": \"page3\",\r\n      \"elements\": [\r\n        {\r\n          \"type\": \"checkbox\",\r\n          \"name\": \"question5\",\r\n          \"title\": \"선호하는 향수 노트를 선택해주세요.\",\r\n          \"isRequired\": true,\r\n          \"choices\": [\r\n            {\r\n              \"value\": 1,\r\n              \"text\": \"시트러스 (Citrus)\"\r\n            },\r\n            {\r\n              \"value\": 2,\r\n              \"text\": \"라벤더 (Lavender)\"\r\n            },\r\n            {\r\n              \"value\": 3,\r\n              \"text\": \"로즈 (Rose)\"\r\n            },\r\n            {\r\n              \"value\": 4,\r\n              \"text\": \"쟈스민 (Jasmine)\"\r\n            },\r\n            {\r\n              \"value\": 5,\r\n              \"text\": \"파출리 (Patchouli)\"\r\n            },\r\n            {\r\n              \"value\": 6,\r\n              \"text\": \"샌달우드 (Sandalwood)\"\r\n            },\r\n            {\r\n              \"value\": 7,\r\n              \"text\": \"머스크 (Musk)\"\r\n            },\r\n            {\r\n              \"value\": 8,\r\n              \"text\": \"바닐라 (Vanilla)\"\r\n            },\r\n            {\r\n              \"value\": 9,\r\n              \"text\": \"앰버 (Amber)\"\r\n            },\r\n            {\r\n              \"value\": 10,\r\n              \"text\": \"베티버 (Vetiver)\"\r\n            }\r\n          ],\r\n          \"showNoneItem\": true,\r\n          \"noneText\": \"모름\",\r\n          \"showSelectAllItem\": true,\r\n          \"selectAllText\": \"모두 선택\"\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  \"navigateToUrl\": \"/unique\"\r\n};","import { useCallback } from 'react';\r\n\r\nimport 'survey-core/defaultV2.min.css';\r\nimport { Model } from 'survey-core';\r\nimport { Survey } from 'survey-react-ui';\r\nimport { surveyThemeJson } from \"./SurveyTheme\";\r\nimport { surveyJson } from \"./SurveyJson\";\r\n\r\n\r\n// const SURVEY_ID = 1;\r\n\r\n\r\nfunction SurveyCreatorWidget() {\r\n  const survey = new Model(surveyJson);\r\n  survey.applyTheme(surveyThemeJson);\r\n  const alertResults = useCallback((sender) => {\r\n    const results = JSON.stringify(sender.data);\r\n    // alert(results);\r\n    alert(\"완료되었습니다.\");\r\n    \r\n    // saveSurveyResults(\r\n    //   \"https://your-web-service.com/\" + SURVEY_ID,\r\n    //   sender.data\r\n    // )\r\n  }, []);\r\n\r\n  survey.onComplete.add(alertResults);\r\n\r\n  return <Survey model={survey} />;\r\n}\r\n\r\n// function saveSurveyResults(url, json) {\r\n//   fetch(url, {\r\n//     method: 'POST',\r\n//     headers: {\r\n//       'Content-Type': 'application/json;charset=UTF-8'\r\n//     },\r\n//     body: JSON.stringify(json)\r\n//   })\r\n//   .then(response => {\r\n//     if (response.ok) {\r\n//       // Handle success\r\n//     } else {\r\n//       // Handle error\r\n//     }\r\n//   })\r\n//   .catch(error => {\r\n//     // Handle error\r\n//   });\r\n// }\r\n\r\nexport default SurveyCreatorWidget;","import React, { useState, useEffect } from 'react'\nimport SurveyCreatorWidget from '../components/SurveyCreatorWidget'\n\n\nfunction SurveyScreen() {\n    return (\n        <div>\n            <SurveyCreatorWidget/>\n        </div>\n    )\n}\n\nexport default SurveyScreen\n","import React, { useState } from 'react'\nimport { Button, Form } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n\nfunction SearchBox() {\n    const [keyword, setKeyword] = useState('')\n\n    let history = useHistory()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (keyword) {\n            history.push(`/?keyword=${keyword}&page=1`)\n        } else {\n            history.push(history.push(history.location.pathname))\n        }\n    }\n    return (\n        <Form onSubmit={submitHandler} inline>\n            <Form.Control\n                type='text'\n                name='q'\n                onChange={(e) => setKeyword(e.target.value)}\n                className='mr-sm-2 ml-sm-5'\n            ></Form.Control>\n\n            <Button\n                type='submit'\n                variant='outline-success'\n                className='p-2'\n            >\n                Search\n            </Button>\n        </Form>\n    )\n}\n\nexport default SearchBox\n","import React from 'react'\r\nimport SearchBox from '../components/SearchBox'\r\n\r\nfunction SearchScreen() {\r\n  return (\r\n    <div>\r\n      <SearchBox />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchScreen\r\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\nimport { listProducts } from '../actions/productActions'\n\n\nfunction UniqueScreen({ history }) {\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state.productList)\n    const { error, loading, products, page, pages } = productList\n\n    let keyword = history.location.search\n\n    useEffect(() => {\n        dispatch(listProducts(keyword))\n\n    }, [dispatch, keyword])\n\n    return (\n        <div>\n            {!keyword && <ProductCarousel />}\n\n            <h1>Recommendations</h1>\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    :\n                    <div>\n                        <Row>\n                            {products.map(product => (\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                                    <Product product={product} />\n                                </Col>\n                            ))}\n                        </Row>\n                        <Paginate page={page} pages={pages} keyword={keyword} />\n                    </div>\n            }\n        </div>\n    )\n}\n\nexport default UniqueScreen\n","import { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\nimport SurveyScreen from './screens/SurveyScreen'\nimport SearchScreen from './screens/SearchScreen'\nimport UniqueScreen from './screens/UniqueScreen'\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/survey' component={SurveyScreen} />\n          <Route path='/search' component={SearchScreen} />\n          <Route path='/unique' component={UniqueScreen} />\n\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n\n          <Route path='/admin/productlist' component={ProductListScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}